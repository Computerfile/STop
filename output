Ok(RouteHandler { router: Router { path_router: PathRouter { routes: {RouteId(1): MethodRouter(MethodRouter { get: BoxedHandler, head: None, delete: None, options: None, patch: None, post: None, put: None, trace: None, connect: None, fallback: Default(Route), allow_header: Bytes(b"GET,HEAD") })}, node: Node { paths: {RouteId(1): "/"} } }, fallback_router: PathRouter { routes: {RouteId(1): Route(Route), RouteId(2): Route(Route)}, node: Node { paths: {RouteId(1): "/", RouteId(2): "/{*__private__axum_fallback}"} } }, default_fallback: true, catch_all_fallback: Default(Route) }, routes: Some([Routes { route: "/", method: Get, func: MethodRouter { get: BoxedHandler, head: None, delete: None, options: None, patch: None, post: None, put: None, trace: None, connect: None, fallback: Default(Route), allow_header: Bytes(b"GET,HEAD") } }]) })

